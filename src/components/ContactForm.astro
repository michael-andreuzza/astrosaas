---
const siteKey = import.meta.env.PUBLIC_RECAPTCHA_SITE_KEY;
const apiEndpoint = import.meta.env.PUBLIC_CONTACT_API_ENDPOINT;

if (!siteKey) {
  console.error(
    "ERROR: PUBLIC_RECAPTCHA_SITE_KEY environment variable is not set."
  );
}
if (!apiEndpoint) {
  console.error(
    "ERROR: PUBLIC_CONTACT_API_ENDPOINT environment variable is not set."
  );
}
---

<form id="contact-form" class="space-y-6">
  <div>
    <label for="name" class="block text-sm font-medium text-gray-700"
      >Name</label
    >
    <input
      type="text"
      id="name"
      name="name"
      required
      minlength="1"
      maxlength="100"
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-accent-500 focus:ring-accent-500 sm:text-sm"
      placeholder="Your Name"
    />
  </div>

  <div>
    <label for="email" class="block text-sm font-medium text-gray-700"
      >Email</label
    >
    <input
      type="email"
      id="email"
      name="email"
      required
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-accent-500 focus:ring-accent-500 sm:text-sm"
      placeholder="you@example.com"
    />
  </div>

  <div>
    <label for="message" class="block text-sm font-medium text-gray-700"
      >Message</label
    >
    <textarea
      id="message"
      name="message"
      rows="4"
      required
      minlength="10"
      maxlength="2000"
      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-accent-500 focus:ring-accent-500 sm:text-sm"
      placeholder="How can we help?"></textarea>
  </div>

  <div>
    <button
      type="submit"
      class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-accent-600 hover:bg-accent-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-accent-500 disabled:opacity-50"
      id="submit-button"
    >
      Send Message
    </button>
  </div>
  <div id="form-status" class="mt-4 text-sm text-center" role="alert"></div>
</form>

<script define:vars={{ siteKey, apiEndpoint }}>
  // Load reCAPTCHA script
  const script = document.createElement("script");
  script.src = `https://www.google.com/recaptcha/enterprise.js?render=${siteKey}`;
  script.async = true;
  script.defer = true;
  document.head.appendChild(script);

  const form = document.getElementById("contact-form");
  const submitButton = document.getElementById("submit-button");
  const statusDiv = document.getElementById("form-status");

  // Function to handle form submission
  const handleSubmit = async (event) => {
    event.preventDefault();
    if (
      !form ||
      !submitButton ||
      !statusDiv ||
      !window.grecaptcha ||
      !window.grecaptcha.enterprise
    ) {
      console.error("Form elements or reCAPTCHA not ready.");
      statusDiv.textContent = "Form initialization error. Please refresh.";
      statusDiv.className = "mt-4 text-sm text-center text-red-600";
      return;
    }

    submitButton.disabled = true;
    statusDiv.textContent = "Sending...";
    statusDiv.className = "mt-4 text-sm text-center text-gray-600";

    try {
      const token = await window.grecaptcha.enterprise.execute(siteKey, {
        action: "CONTACT_FORM",
      });
      console.log("reCAPTCHA token received:", token ? "Yes" : "No"); // Add logging

      const formData = new FormData(form);
      const data = {
        name: formData.get("name"),
        email: formData.get("email"),
        message: formData.get("message"),
        recaptchaToken: token, // Send token to backend
      };

      console.log("Sending data to API:", apiEndpoint, JSON.stringify(data)); // Add logging

      const response = await fetch(apiEndpoint, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      });

      console.log("API response status:", response.status); // Add logging
      const result = await response.json();
      console.log("API response body:", result); // Add logging

      if (response.ok) {
        statusDiv.textContent = result.message || "Message sent successfully!";
        statusDiv.className = "mt-4 text-sm text-center text-green-600";
        form.reset(); // Clear the form
      } else {
        throw new Error(
          result.details || result.error || "Failed to send message."
        );
      }
    } catch (error) {
      console.error("Form submission error:", error);
      statusDiv.textContent = `Error: ${error.message || "Could not send message. Please try again."}`;
      statusDiv.className = "mt-4 text-sm text-center text-red-600";
    } finally {
      if (submitButton) submitButton.disabled = false;
    }
  };

  // Add event listener when the form exists
  if (form) {
    form.addEventListener("submit", handleSubmit);
  } else {
    console.error("Contact form not found on page load.");
  }
</script>
